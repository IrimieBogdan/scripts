# This defaults file contains both JJB variables and project configuration
# stanzas which apply to all jobs that do not have an alternate "defaults:"
# declaration.
#
# JJB variables are values that get interpolated into templates and shell
# scripts where ever that variable appears through  JJB yaml & shells scripts in
# the form of {varnam}.
#
# JJB project configuration is actual JJB declaration of some built-in Jenkins
# job feature or plugin and the attributes necessary to get the desired
# behavior our of that plugin/feature.
#
# In this file the distinction between "JJB variable" and "JJB project
# configuration" is made by the presence of a line comment with "# VAR" above
# the description of that variable.
#
- defaults:
    name: global
    project-type: freestyle

    properties:
        - github:
            url: '{github_http_url}'

    github_user: 'puppetlabs'
    github_project: 'GITHUB-PROJECT-JJB-VARIABLE-NOT-SET'
    git_url: 'git@github.com:{github_user}/{github_project}.git'
    github_http_url: 'https://github.com/{github_user}/{github_project}'

    scm:
        - git:
            url: '{git_url}'
            refspec: '{obj:git_refspec}'
            submodule:
                recursive: True
            branches:
                - '{scm_branch}'
            skip-tag: '{git_skip_tag}'

    disabled: '{obj:set_disabled}'
    set_disabled: False

    # VAR
    # Set the git refspec for a job using a git repo. This is the value jenkins
    # git plugin sets by default. We provide a default value here so that github
    # PR builder jobs and their downstreams can actually pull all the necessary
    # PR commits.
    git_refspec: '+refs/heads/*:refs/remotes/origin/*'
    git_excluded_regions: ''
    git_included_regions: ''
    scm_branch: ''
    qualifier: '{scm_branch}'

    logrotate:
        daysToKeep: '{logrotate_daystokeep}'
        numToKeep: '{logrotate_numtokeep}'

    # VAR
    # Default values for the logrotate feature. These values determine how many
    # builds to keep history for and how long each build history should be
    # tracked.
    #
    # Set to -1 to disable either either method of keeping builds around.
    #
    logrotate_daystokeep: 14
    logrotate_numtokeep: 14

    retry-count: 10
    quiet-period: 2

    wrappers:
        - timeout:
            timeout: '{console_timeout}'
            type: no-activity
            actions:
                - abort
        - ansicolor:
            colormap: xterm

    # VAR for ci-job-configs' trigger-parameterized-build publisher macro
    # Default predefined parameters for triggered job.
    # Probably most useful to set on a per job-template basis.
    tpb_predefined_parameters: ''

    # VAR for ci-job-configs' trigger-parameterized-build publisher macro
    # Default property file for triggered job.
    tpb_property_file: ''

    # VAR for ci-job-configs' trigger-parameterized-build publisher macro
    # Default current parameter passing behavior.
    tpb_current_parameters: True

    # VAR for ci-job-configs' trigger-parameterized-build publisher macro
    # Default condition under which to trigger downstream job. Note that JJB
    # doesn't care what value it receives for this field so be careful! Valid
    # values:
    #   - ALWAYS
    #   - SUCCESS
    #   - FAILED
    #   - UNSTABLE
    #   - UNSTABLE_OR_BETTER
    #   - UNSTABLE_OR_WORSE
    tpb_condition: 'UNSTABLE_OR_BETTER'

    # VAR for ci-job-configs' trigger-parameterized-build publisher macro
    # Default git revision passing behavior for downstream job.
    tpb_git_revision: True

    # VAR
    # Intedned to be used on a job-template so that instances of the
    # job-template may pass different downstream jobs.
    tpb_projects: ''

    # VAR
    # Intended to be used as an alias for 'tpb_projects' at the job-group level,
    # to provide a means to connect different pipelines.
    downstream_jobs: ''

    # VAR
    # Default no-activity build timeout wrapper in seconds.
    console_timeout: '10'

    hipchat:
        enabled: true
        room: '{obj:hipchat_room}'
        start-notify: '{obj:hcnotifier_start_notify}'
        notify-success: '{obj:hcnotifier_notify_success}'
        notify-aborted: '{obj:hcnotifier_notify_aborted}'
        notify-not-built: '{obj:hcnotifier_notify_not_built}'
        notify-failure: '{obj:hcnotifier_notify_failure}'
        notify-unstable: '{obj:hcnotifier_notify_unstable}'
        notify-back-to-normal: '{obj:hcnotifier_notify_back_to_normal}'

    hcnotifier_start_notify: True
    hcnotifier_notify_success: True
    hcnotifier_notify_aborted: True
    hcnotifier_notify_not_built: True
    hcnotifier_notify_failure: True
    hcnotifier_notify_unstable: True
    hcnotifier_notify_back_to_normal: True

    # VAR
    # Can be a comma-delimited list of hipchat room names. There should be no
    # spaces between comma and room names.
    hipchat_room: ''

    ###
    # Below are variables that would ideally belong to project or job-specific
    # defaults. However, with JJB's current design/implementation each job can
    # only have a single template and there is no such thing as template
    # inheritance.
    #

    # VAR
    # Used in the {value_stream}_{name}_init-periodic_{qualifier} jobs to
    # specify run intervals in cron format.
    timed_trigger_cron: ''

    # VAR
    # Deprecated variable used by ezbake packaging jobs to work around jankiness
    # with original ezbake design. This variable can be removed once EZ-14 is
    # finished and implemented in all relevant clojure projects.
    script_dir: ''

    # VAR
    # Used by shell scripts that call beaker to set a default --preserve-hosts
    # value. Being explicit about "never" ensures that staging/experimental jobs
    # and jobs that don't explicitly need to preserve hosts don't unnecessarily
    # consume vsphere resources.
    preserve_hosts: never

    # VAR
    # This variable is intended to be used in shell scripts to export additional
    # variables on a per-job or per-project basis. This allows changes to
    # individual jobs or projects that can be accomplished by exporting
    # environment variables that won't necessarily affect other jobs using the
    # same script.
    additional_exports: ''

    # VAR
    # Intended to be used in the display-name field of job templates to
    # distinguish multiple jobs reified from the same template from one another
    # when viewing in Jenkins Web UI
    dn-qualifier: ''

    # VAR
    # Intended to be used in the display-name field of job templates to help
    # sort jobs alphanumerically in Jenkins Web UI view.
    dn-sort-index: ''

    # VAR
    is-pe: ''

    # VAR
    # Used in the git-clone shell script to set a default for the GIT_REF
    # environment variable.
    git-branch: 'master'

    # VAR
    # Used to set default values for PE_VER job parameters when duplicating CI
    # pipelines for different PE versions. Non-PE jobs don't need this value set
    # so the default is empty string.
    default_PE_VER: ''

    # VAR
    # Used to add a command to run before frontend assets are built, but after
    # npm install has completed.
    assets-prebuild-cmd: ''

    # VAR
    # Used to add options to `bundler install` when running ruby unit tests
    unit-bundler-opts: ''

    # VAR
    # Used in shell scripts to set GEM_SOURCE, which is typically used in
    # project Gemfile to indicate where to look for ruby gems.
    gem_source: 'http://rubygems.delivery.puppetlabs.net'

    # VAR
    # Used in shell scripts to indicate default version of ruby to set with rvm.
    rvm_ruby_version: '1.9.3-p484'

    # VAR
    # Used in packaging-clj-lein-ezbake-multiproject.sh to set a default
    # variable name for beaker presuites to pick up on when isntalling a
    # package built by releng jobs.
    package_build_version_varname: 'PACKAGE_BUILD_VERSION'

    # VAR
    # Used in kickoff jobs to set the value for the "disabled" field. Here we
    # ensure that kickoff jobs cannot be accidentally enabled.
    kickoff_disabled: True

    # VAR
    # Used to indicate that Jenkins shouldn't do its default stupid
    # tagging behavior
    git_skip_tag: True

    # VAR
    # Used in jobs that call 'rake pl:jenkins:uber_build' to conflicts between
    # simultaneous triggers of two jobs building the same version of the same
    # package.
    packaging_sleep: 0

    # VAR
    # Used in integration-beaker.sh to set default value for environment
    # variable of same name.
    pe_upgrade_family: ''

    # VAR
    # Used in integration-beaker.sh to set default value for environment
    # variable of same name.
    pe_upgrade_version: ''

    # VAR
    # Used in PE integration job templates to set default value for the
    # UPGRADE_FROM axis on various jobs. NONE is interpreted in the
    # integration-beaker.sh script as meaning "do not upgrade from any version
    # of PE"
    upgrade_from_axis: 'NONE'

    # VAR
    # Used to set the default pe_family to distinguish pipelines from one
    # another.
    pe_family: ''

    # VAR
    # Used in various shell script steps to set the hostname for redis-cli
    # calls.
    redis_hostname: 'redis.delivery.puppetlabs.net'

    # VAR
    # Used in integration-beaker.sh to set default value for path to a file
    # containing what are presumably dependency versions for PE but it's not
    # clear where exactly this file is used.
    pe_dep_versions: ''

    # VAR
    # Used in integration-beaker.sh to set default value for path to a file
    # containing what are presumably dependency versions for PE but it's not
    # clear where exactly this file is used.
    beaker_type: 'foss'

    # VAR
    # Used in integration-beaker.sh to set default value for the directory from
    # which beaker should be run. The default value of '' indicates that by
    # default projects which don't override this value should run beaker from
    # the root directory of their repository.
    beaker_root: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # loadpath.
    beaker_loadpath: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # post suite.
    beaker_postsuite: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # options file.
    beaker_optionsfile: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # helper file.
    beaker_helper: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # pre suite.
    beaker_presuite: ''

    # VAR
    # Used in integration-beaker.sh to set default value for the beaker
    # test suite.
    beaker_testsuite: ''

    # VAR
    # Used in the ruby unit test script to give rspec extra options
    unit-rspec-extra: ''

    # VAR
    # Used in the ruby unit test script to adjust the environment
    # under which rspec runs.
    unit-rspec-env: ''

    # VAR
    # Used in the ruby unit test script to determine which versions of
    # ruby to test against
    unit_ruby_versions:
        - '1.9.3-p484'
        - '2.1.1'

    # VAR
    # Used in matrix jobs to mask certain cells from executing
    combination-filter: ''

    # JJB Built-in VAR
    # Sets the default value for a job description.
    #
    # To reduce confusion for those trying to understand the relationship
    # between Jenkins jobs and ci-job-configs we make it possible to add
    # important ci-job-configs meta data to a job description in a standardized
    # format.
    description: |
        <p>{meta_description}</p>
        <p>-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</p>
        <p><h3>ci-job-configs Relative paths and links:</h3>
        project: <a href="{meta_github_tree_url}/{meta_path_project}">
            {meta_path_project}
            </a><br />
        job-group: <a href="{meta_github_tree_url}/{meta_path_jobgroup}">
            {meta_path_jobgroup}
            </a><br />
        job-template: <a href="{meta_github_tree_url}/{meta_path_jobtemplate}">
            {meta_path_jobtemplate}
            </a><br />
        defaults: <a href="{meta_github_tree_url}/{meta_path_defaults}">
            {meta_path_defaults}
            </a><br />
        </p>

    # VAR
    # URL used to point to the github tree view of the ci-job-configs repo, for
    # linking to relevant YAML files from job views in Jenkins.
    meta_github_tree_url: "https://github.com/puppetlabs/ci-job-configs/tree/master"

    # VAR
    # Describe the intent of the job.
    meta_description: 'No description entered in JJB configs.'

    # VAR
    # Path to the job-template file.
    meta_path_jobtemplate: ''

    # VAR
    # Path to the project file.
    meta_path_project: ''

    # VAR
    # Path to the job-group file.
    meta_path_jobgroup: ''

    # VAR
    # Path to the defaults file.
    meta_path_defaults: 'resources/defaults/global.yaml'

    # VAR
    meta_ci_compare_revisions_instances:
        - enterprise
        - platform

    # VAR
    # Used in Github PR Jobs to bestow great responsibility on the named
    # parties. ie, trigger phrases such as
    #   "okay to test"
    #     let jenkins loose on the PR
    #   "test this please"
    #     one-time test run
    #   "add to whitelist"
    #     add the named parties to the list of people who can issue these
    #     commands and expect jenkins to respond
    gpr_admin_list:
        - doug-rosser
        - rji
        - waynr
        - branan
        - steveax

    # VAR
    # Used in Github PR Jobs to bestow great responsibility on the named
    # parties. ie, trigger phrases such as
    #   "okay to test"
    #     let jenkins loose on the PR
    #   "test this please"
    #     one-time test run
    #   "add to whitelist"
    #     add the named parties to the list of people who can issue these
    #     commands and expect jenkins to respond
    gpr_orgs:
        - puppetlabs

    # VAR
    # The phrase that will cause the job to build.
    gpr_trigger_phrase: ''

    # VAR
    # If set to True, only commenting the trigger phrase will cause the job to
    # build.
    gpr_only_trigger_phrase: False

    # VAR
    # Indicate whether all PRs should automatically be built.
    gpr_permit_all: False

    # VAR
    # Githup PR trigger polling interval.
    gpr_cron: 'H/5 * * * *'

    # VAR
    # Used to indicate whether or not a particular project, job-group, or
    # job-template should cause a build artifact to be preserved in a nightly
    # build. The only value here that will cause the artifact to be preserved is
    # "TRUE".
    ship_nightly: 'FALSE'

    # VAR
    # Used as the lein test selector(Run 'lein help test' for more info).
    # Default is set to all
    clj_lein_test_selector: ':all'

    # VAR
    # List of LDAP service types. Known types include active directory and
    # openldap
    default_ldap_type_axis: ''

    # VAR
    # Set the pathname to capture JUnit XML output in the Jenkins publisher used
    # for this purpose.
    junit_results_glob: '**/junit/latest/*.xml'

    # VAR
    # Set the path globs used to capture file artifacts using the "Archive
    # Artifacts" Jenkins publisher.
    archive_artifacts_glob: '**/junit/latest/*.xml'

    # VAR
    # set the regular expressions used by the description setter plugin
    ds_regexp: ''
    ds_desc: ''
    ds_regexp_for_failed: ''
    ds_desc_for_failed: ''

    # VAR
    # Set the default value of predefined parameters for the
    # init_merge-manual-periodic pipeline.
    init_mergely_predefined_parameters: ''
    init_nightly_predefined_parameters: ''
