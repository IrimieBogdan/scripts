- job-template:
    name: '{value_stream}_{name}_integration-system_{qualifier}'
    meta_path_jobtemplate: 'resources/jobs/integration-beaker.yaml'
    display-name: '{name} ({scm_branch}){dn-sort-index} Integration{dn-qualifier} Test Suite'
    project-type: matrix
    node: beaker
    parameters:
        - string:
            name: '{package_build_version_varname}'
            description: "Version of {name} to use in test."
        - string:
            name: PLATFORM_AXIS
            default: '{default_platform_axis}'
            description: "List of platforms for user-defined PLAFORM axis."
        - string:
            name: LAYOUT_AXIS
            default: '{default_layout_axis}'
            description: "List of layouts for user-defined LAYOUT axis."
    execution-strategy:
        combination-filter: '{combination-filter}'
    axes:
        - axis:
            type: dynamic
            name: LAYOUT
            values:
                - LAYOUT_AXIS
        - axis:
            type: dynamic
            name: PLATFORM
            values:
                - PLATFORM_AXIS
        - axis:
            type: slave
            name: label
            values:
                - beaker
    builders:
        - shell:
            !include-raw integration-beaker.sh
    publishers:
        - beaker-junit-publisher:
            additional: '{bjp_additional}'
        - trigger-parameterized-builds:
            - project: '{obj:tpb_projects}'
              predefined-parameters: '{tpb_predefined_parameters}'
              current-parameters: '{tpb_current_parameters}'
              condition: '{tpb_condition}'
              property-file: '{tpb_property_file}'
              git-revision: '{tpb_git_revision}'

- job-template:
    name: '{value_stream}_{name}_integration-system_pe_{qualifier}_{scm_branch}'
    meta_path_jobtemplate: 'resources/jobs/integration-beaker.yaml'
    display-name: '{name} ({scm_branch}){dn-sort-index} {dn-qualifier}'
    dn-qualifier: 'Integration'
    project-type: matrix
    node: beaker
    parameters:
        - string:
            name: pe_version
            description: "Version of {name} to use in test."
    execution-strategy:
        combination-filter: '{combination-filter}'
    axes:
        - axis:
            type: user-defined
            name: UPGRADE_FROM
            values: '{obj:upgrade_from_axis}'
        - axis:
            type: user-defined
            name: LAYOUT
            values: '{obj:layout_axis}'
        - axis:
            type: user-defined
            name: PLATFORM
            values: '{obj:platform_axis}'
        - axis:
            type: slave
            name: label
            values:
                - beaker
    builders:
        - shell:
            !include-raw integration-beaker.sh
    publishers:
        - beaker-junit-publisher:
            additional: ''
        - trigger-parameterized-builds:
            - project: '{obj:tpb_projects}'
              predefined-parameters: '{tpb_predefined_parameters}'
              current-parameters: '{tpb_current_parameters}'
              condition: '{tpb_condition}'
              property-file: '{tpb_property_file}'
              git-revision: '{tpb_git_revision}'
        - description-setter:
            regexp: "export pe_version=([\\w\\-.]+)"
            description: '\1'
            regexp-for-failed: "export pe_version=([\\w\\-.]+)"
            description-for-failed: '\1'
            set-for-matrix: true

- job-template:
    name: '{value_stream}_{name}_integration-system_windows-{qualifier}'
    meta_path_jobtemplate: 'resources/jobs/integration-beaker.yaml'
    display-name: '{name} Windows PE Integration Tests ({qualifier})'
    project-type: matrix
    execution-strategy:
        combination-filter: '!(ARCH == "64" && (AGENT ==~ /windows2003(r2)?-\d\d/))'
    node: beaker
    parameters:
        - string:
            name: pe_family
            default: '3.7'
            description: "PE \"family\" to test."
        - string:
            name: pe_version_override
            default: ''
            description: "Override for <pe_version> otherwise obtained from redis."
    execution-strategy:
        combination-filter: '{combination-filter}'
    axes:
        - axis:
            type: user-defined
            name: ARCH
            values: '{obj:default_windows-arch_axis}'
        - axis:
            type: user-defined
            name: AGENT
            values: '{obj:default_windows-agent_axis}'
        - axis:
            type: slave
            name: label
            values:
                - beaker
    builders:
        - shell:
            !include-raw integration-beaker.sh

    publishers:
        - beaker-junit-publisher:
            additional: ''
        - description-setter:
            regexp: "export pe_version=([\\w\\-.]+)"
            description: '\1 {beaker_testsuite}'
            regexp-for-failed: "export pe_version=([\\w\\-.]+)"
            description-for-failed: '\1 {beaker_testsuite}'
            set-for-matrix: true

- job-template:
    name: '{value_stream}_{name}_init_{qualifier}'
    meta_path_jobtemplate: 'resources/jobs/integration-beaker.yaml'
    display-name: '{displayname}'
    defaults: global-no-scm
    node: worker
    disabled: '{obj:kickoff_disabled}'
    execution-strategy:
        sequential: true
    triggers:
        - timed: '{kickoff_interval}'
    builders:
        - trigger-builds:
            - project: '{obj:phase_1_projects}'
              block: true
        - trigger-builds:
            - project: '{obj:phase_2_projects}'
              block: true

